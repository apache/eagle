<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<application>
    <type>ALERT_UNIT_TOPOLOGY_APP</type>
    <name>Alert Engine</name>
    <description>Real-time Alert Engine</description>
    <version>0.5.0-incubating</version>
    <configuration>
       <!-- alert topology sizing parameters -->
        <property>
            <name>workers</name>
            <displayName>Worker Number</displayName>
            <value>1</value>
            <description>Storm parallelism worker number</description>
            <required>false</required>
        </property>
        <property>
            <name>topology.numOfSpoutTasks</name>
            <displayName>Source Tasks Number</displayName>
            <value>1</value>
            <description>Number of spout tasks</description>
            <required>false</required>
        </property>
        <property>
            <name>topology.numOfRouterBolts</name>
            <displayName>Route Tasks Number</displayName>
            <value>4</value>
            <description>Number of router tasks</description>
            <required>false</required>
        </property>
        <property>
            <name>topology.numOfAlertBolts</name>
            <displayName>Evaluator Tasks Number</displayName>
            <value>10</value>
            <description>Number of alert tasks</description>
            <required>false</required>
        </property>
        <property>
            <name>topology.numOfPublishExecutors</name>
            <displayName>Publisher Executor Number</displayName>
            <value>1</value>
            <description>Number of publish executors</description>
            <required>false</required>
        </property>
        <property>
            <name>topology.numOfPublishTasks</name>
            <displayName>Publisher Tasks Number</displayName>
            <value>1</value>
            <description>Number of publish tasks</description>
            <required>false</required>
        </property>
        <property>
            <name>topology.message.timeout.secs</name>
            <displayName>topology message timeout (secs)</displayName>
            <description>default timeout is 300s</description>
            <value>300</value>
            <required>false</required>
        </property>

        <!-- alert spout configuration -->
        <property>
            <name>spout.kafkaBrokerZkQuorum</name>
            <displayName>Kafka Zookeeper Quorum</displayName>
            <value>localhost:2181</value>
            <description>Zookeeper quorum of kafka broker for spout to consume data</description>
            <required>true</required>
        </property>
        <property>
            <name>spout.kafkaBrokerZkBasePath</name>
            <displayName>Kafka Zookeeper Root</displayName>
            <value>/brokers</value>
            <description>Zookeeper znode path for kafka brokers</description>
            <required>false</required>
        </property>
        <property>
            <name>spout.stormKafkaUseSameZkQuorumWithKafkaBroker</name>
            <displayName>Reuse Kafka Zookeeper</displayName>
            <value>true</value>
            <description>Use same zookeeper for kafka server and kafka consumer(Storm-Kafka)</description>
            <required>false</required>
        </property>
        <property>
            <name>spout.stormKafkaTransactionZkPath</name>
            <displayName>Kafka Transaction ZkPath</displayName>
            <value>/consumers</value>
            <description>Zookeeper path for storm kafka transaction</description>
            <required>false</required>
        </property>
        <property>
            <name>spout.stormKafkaEagleConsumer</name>
            <displayName>Kafka Consumer ID</displayName>
            <value>eagle_consumer</value>
            <description>Zookeeper quorum for spout to consume data</description>
            <required>true</required>
        </property>

        <!-- zk config for alert engine -->
        <property>
            <name>zkConfig.zkQuorum</name>
            <displayName>Coordinator Zookeeper Quorum</displayName>
            <value>localhost:2181</value>
            <description>Zookeeper quorum for alert engine</description>
            <required>true</required>
        </property>
        <property>
            <name>zkConfig.zkRoot</name>
            <displayName>Coordinator Zookeeper Root</displayName>
            <value>/alert</value>
            <description>Zookeeper znode path for alert engine</description>
            <required>false</required>
        </property>
        <property>
            <name>metadataService.context</name>
            <displayName>Metadata Service Context Path</displayName>
            <value>/rest</value>
            <description>Metadata service context path</description>
            <required>false</required>
        </property>
        <property>
            <name>metadataService.host</name>
            <displayName>Metadata Service Host</displayName>
            <value>localhost</value>
            <description>Metadata service host</description>
            <required>true</required>
        </property>
        <property>
            <name>metadataService.port</name>
            <displayName>Metadata Service Port</displayName>
            <value>9090</value>
            <description>Metadata service port</description>
            <required>true</required>
        </property>
    </configuration>
    <docs>
        <install>
            <div>
                <label>Perquisites</label>
                <ol>
                    <li>Require permission to READ/WRITE/CREATE on kafka topic</li>
                </ol>
                <label>Usage Steps</label>
                <ol>
                    <li>Configure kafka connection in <b>settings</b></li>
                    <li>Install and start alert engine</li>
                    <li>Integrate streams and define policy</li>
                </ol>
            </div>
        </install>
        <uninstall>
            <div>
                <label>After uninstalled</label>
                <ol>
                    <li>Clean up kafka topics automatically created by alert engine</li>
                </ol>
            </div>
        </uninstall>
    </docs>
</application>
