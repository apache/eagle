[
  {
    "name":"nerveCenter_port_down",
    "description":"",
    "inputStreams":[
      "ncAlertStream"
    ],
    "outputStreams":[
      "ncAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from ncAlertStream[status=='active'] select 'nerveCenterAlert' as name, 'network' as namespace, UUID() as docId, timestamp, str:concat(cause, ':', entity, ':', dims_component) as alertKey, '' as parentKey, dims_component, dims_pod, dims_bubble, dims_entity, dims_dc, severity, componentType, entityType, source, message, key, linkedSwitch, localPort, pod, 'nerveCenter' as alertSource, ip, linkedPort, bubble, state, entity, status, dc, 0l as dedupCount, 0l as dedupFirstOccurrence, 'ncAlertOutputStream' as streamName, monitor, cause insert into ncAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"ENABLED",
    "partitionSpec":[
      {
        "streamId":"ncAlertStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"sherlock_metric_updown",
    "description":"",
    "inputStreams":[
      "sherlockAlertStream"
    ],
    "outputStreams":[
      "sherlockAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from sherlockAlertStream[status=='active'] select 'sherlockAlert' as name, 'network' as namespace, UUID() as docId, timestamp, str:concat(cause, ':', entity, ':', component) as alertKey, '' as parentKey, dims_device, dims_ifAlias, dims_bubble, dims_pod, dims_dc, source, currState, msg, prevState, type, kind, switchtype, debouncer_type, debouncer_value, current_value, current_execursion, threshold_execursion, operation, severity, componentType, linkedSwitch, localPort, pod, 'sherlockAlert' as alertSource, entityType, ip, component, linkedPort, bubble, state, entity, status,dc, 0l as dedupCount, 0l as dedupFirstOccurrence, 'sherlockAlertOutputStream' as streamName, cause, message insert into sherlockAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"ENABLED",
    "partitionSpec":[
      {
        "streamId":"sherlockAlertStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"network_aggregate",
    "description":"aggregate alerts into parent alerts",
    "inputStreams":[
      "syslogAlertOutputStream",
      "ncAlertOutputStream",
      "sherlockAlertOutputStream"
    ],
    "outputStreams":[
      "aggregatedAlertStream"
    ],
    "definition":{
      "type":"Custom",
      "value":"",
      "handlerClass":"org.apache.eagle.alert.engine.evaluator.aggregate.AlertAggregateHandler",
      "properties":{
        "aggregateKey":{
          "syslogAlertOutputStream":{
            "pattern":"%s",
            "columns":[
              "alertKey"
            ]
          },
          "ncAlertOutputStream":{
            "pattern":"%s",
            "columns":[
              "alertKey"
            ]
          },
          "sherlockAlertOutputStream":{
            "pattern":"%s",
            "columns":[
              "alertKey"
            ]
          }
        },
        "fixFields":{
          "name":"networkAggregateAlert",
          "namespace":"network",
          "streamName":"aggregatedAlertStream",
          "alertSource":"aggregateAlert"
        }
      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"ENABLED",
    "partitionSpec":[
      {
        "streamId":"syslogAlertOutputStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      },
      {
        "streamId":"ncAlertOutputStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      },
      {
        "streamId":"sherlockAlertOutputStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"network_correlate",
    "description":"correlate alerts for circuit down",
    "inputStreams":[
      "aggregatedAlertStream"
    ],
    "outputStreams":[
      "correlatedAlertStream"
    ],
    "definition":{
      "type":"Custom",
      "value":"",
      "handlerClass":"org.apache.eagle.alert.engine.evaluator.aggregate.AlertAggregateHandler",
      "properties":{
        "aggregateKey":{
          "aggregatedAlertStream":{
            "pattern":"%s",
            "columns":[
              "linkedPort"
            ]
          }
        },
        "fixFields":{
          "name":"networkCorrelateAlert",
          "namespace":"network",
          "streamName":"correlatedAlertStream",
          "alertSource":"correlateAlert"
        },
        "filters":{
          "aggregatedAlertStream":"cause == 'Port_Down'"
        }
      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"aggregatedAlertStream",
        "type":"GROUPBY",
        "columns":[
          "linkedPort"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"network_symptomatic",
    "description":"Correlate circuit down alerts into a symptomatic alert",
    "inputStreams":[
      "correlatedAlertStream"
    ],
    "outputStreams":[
      "deviceDownAlertStream",
      "symptomaticAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from correlatedAlertStream#window.time(10 min) select \"networkDeviceDownAlert\" as name, namespace, UUID() as docId, linkedSwitch as entity, pod, bubble, dc, severity, state, cause, message, firstOccurenceTime, timestamp, \"deviceDownOutputStream\" as streamName group by linkedSwitch having count() > 6 insert into deviceDownAlertStream; from correlatedAlertStream#window.time(10 min) as left join deviceDownAlertStream#window.time(10 min) as right on left.linkedSwitch = right.linkedSwitch select left.name, left.streamId, left.pod, left.docId, left.cause, left.firstOccurenceTime, left.bubble, left.state, left.timestamp, left.severity, left.componentType, left.linkedSwitch, left.alertSource, left.entityType, left.ip, left.alertKey, left.message, left.streamName, left.createBy, left.component, left.linkedPort, left.policyId, left.createTime, left.namespace, left.endTime, left.entity, left.dc, left.status, right.docId as parentKey insert into symptomaticAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"correlatedAlertStream",
        "type":"GROUPBY",
        "columns":[
          "linkedSwitch"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"critical_temperature",
    "description":"CRITICAL system overheating msg",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(severity_name == \"EMERG\" or severity_name == \"ALERT\" or severity_name ==\"CRIT\") and (regex:find(\"The system is overheating\", msg))] select 'syslogAlert' as name, 'CRITICAL' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Temp_Status' as cause, str:concat('Temp_Status', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"critical_power_supply",
    "description":"CRITICAL power supply severity msgs",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(severity_name == \"EMERG\" or severity_name == \"ALERT\" or severity_name ==\"CRIT\") and (regex:find(\"Power Supply is not responding\",msg))] select 'syslogAlert' as name, 'CRITICAL' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Power_Supply_Health' as cause, str:concat('Power_Supply_Health', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"critical_memory",
    "description":"CRITICAL memory inconsistency  msgs",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(severity_name == \"EMERG\" or severity_name == \"ALERT\" or severity_name ==\"CRIT\") and (regex:find(\"Memory inconsistency detected\", msg))] select 'syslogAlert' as name, 'CRITICAL' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Memory_Health' as cause, str:concat('Memory_Health', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"critical_chassis",
    "description":" chassis critical alerts  ",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[severity_name == \"ERR\" and (regex:find(\"CB color=YELLOW, class=CHASSIS, reason=Check\", msg))] select 'syslogAlert' as name, 'CRITICAL' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Chassis_Health' as cause, str:concat('Chassis_Health', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"warning_disk",
    "description":"warning temporary directory warning alert msgs",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(severity_name == \"EMERG\" or severity_name == \"ALERT\" or severity_name ==\"CRIT\") and (regex:find(\"System temporary directory usage is unexpectedly high\", msg) or regex: find(\"Re enabling dynamic learning on all interfaces\", msg))] select 'syslogAlert' as name, 'WARNING' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Disk_Status' as cause, str:concat('Disk_Status', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"warning_stmlearning",
    "description":"warning reenabling learning warning alert msgs",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(severity_name == \"EMERG\" or severity_name == \"ALERT\" or severity_name ==\"CRIT\") and (regex: find(\"Re enabling dynamic learning on all interfaces\", msg))] select 'syslogAlert' as name, 'WARNING' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'STM_Learning' as cause, str:concat('STM_Learning', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"warning_snmpd",
    "description":"snmp daemon issue minor alert",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(severity_name == \"EMERG\" or severity_name == \"ALERT\" or severity_name ==\"CRIT\") and (regex:find(\"Service \"snmpd\" (PID [0-9]+]) hasn't caught signal 6 (core will be saved)\", msg))] select 'syslogAlert' as name, 'WARNING' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'SNMP_Health' as cause, str:concat('SNMP_Health', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"warning_temperature",
    "description":"warning temperature  minor alarm msgs",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(severity_name == \"EMERG\" or severity_name == \"ALERT\" or severity_name ==\"CRIT\") and (regex:find(\"System minor temperature alarm on module\", msg))] select 'syslogAlert' as name, 'WARNING' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Temp_Status' as cause, str:concat('Temp_Status', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"fatal_chassis",
    "description":"fatal chassis alerts msgs",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[severity_name == \"ERR\" and (regex:find(\"Reporting self ping blackhole for\", msg))] select 'syslogAlert' as name, 'FATAL' as severity, namespace, facility_name, facility_code, severity_code,severity_name ,entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Chassis_Health' as cause, str:concat('Chassis_Health', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  },
  {
    "name":"fatal_FRUs",
    "description":"fatal alert on keywords 'FRU Offline', 'FRU power off', and 'FRU power on'",
    "inputStreams":[
      "syslogEventStream"
    ],
    "outputStreams":[
      "syslogAlertOutputStream"
    ],
    "definition":{
      "type":"siddhi",
      "value":"from syslogEventStream[(regex:find(\"Fru Offline\", msg)) or (regex:find(\"FRU power off\", msg)) or (regex:find(\"FRU power on\", msg))] select 'syslogAlert' as name, 'FATAL' as severity, namespace, facility_name, facility_code, severity_code, severity_name , entity, dims_appname, msgid,  msg, timestamp, ip, status, component, componentType, linkedPort, linkedSwitch, localPort, message, pod, bubble,dc,entityType,productionLevel, 'syslogAlert' as name, 'network' as namespace, 'Module_Health' as cause, str:concat('Module_Health', ':', dims_hostname, ':', component) as alertKey, '' as parentKey, UUID() as docId, 'CRITICAL' as severity,  'open' as state,0l as dedupCount, 0l as dedupFirstOccurrence, 'syslogAlertOutputStream' as streamName insert into syslogAlertOutputStream;",
      "properties":{

      },
      "inputStreams":[

      ],
      "outputStreams":[

      ]
    },
    "policyStatus":"DISABLED",
    "partitionSpec":[
      {
        "streamId":"syslogEventStream",
        "type":"GROUPBY",
        "columns":[
          "entity"
        ]
      }
    ],
    "parallelismHint":0
  }
]